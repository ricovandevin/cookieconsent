<?php

/**
 * @file
 * Contains cookieconsent.module.
 */

/**
 * Implements hook_help().
 */
function cookieconsent_help($path, $arg) {
  switch ($path) {
    // Main module help for the cookieconsent module.
    case 'admin/help#cookieconsent':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('CookieConsent uses the Cookie Consent javascript library for alerting users about the use of cookies on your website') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_permission().
 */
function cookieconsent_permission() {
  return array(
    'administer cookieconsent settings' => array(
      'title' => t('Administer CookieConsent Settings'),
      'description' => t('Administer the CookieConsent settings to control the appearance of the popup'),
    ),
    'exclude from cookieconsent' => array(
      'title' => t('Exclude role from CookieConsent'),
      'description' => t('Control which roles are excluded from seeing the popup'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function cookieconsent_menu() {
  $items = array();

  $items['admin/config/system/cookieconsent'] = array(
    'title' => t('Cookie settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cookieconsent_settings_form'),
    'access arguments' => array('administer cookieconsent settings'),
    'file' => 'includes/cookieconsent.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_variable_group_info().
 */
function cookieconsent_variable_group_info() {
  $groups = array();

  $groups['cookieconsent'] = array(
    'title' => t('CookieConsent'),
    'description' => t('Settings for CookieConsent'),
    'access' => 'administer cookieconsent settings',
    'path' => array('admin/config/system/cookieconsent'),
  );

  return $groups;
}

/**
 * Implements hook_variable_info().
 */
function cookieconsent_variable_info($options) {
  $variables = array();

  $variables['cookieconsent_message'] = array(
    'type' => 'string',
    'group' => 'cookieconsent',
    'title' => t('Message', array(), $options),
    'localize' => TRUE,
  );

  $variables['cookieconsent_accept_button_text'] = array(
    'type' => 'string',
    'group' => 'cookieconsent',
    'title' => t('Accept button text', array(), $options),
    'localize' => TRUE,
  );

  $variables['cookieconsent_dismiss_button_text'] = array(
    'type' => 'string',
    'group' => 'cookieconsent',
    'title' => t('Dismiss button text', array(), $options),
    'localize' => TRUE,
  );

  $variables['cookieconsent_policy_link_text'] = array(
    'type' => 'string',
    'group' => 'cookieconsent',
    'title' => t('Policy link text', array(), $options),
    'localize' => TRUE,
  );

  return $variables;
}

/**
 * Implements hook_theme().
 */
function cookieconsent_theme($existing, $type, $theme, $path) {
  return array(
    'cookieconsent' => array(
      'variables' => array(
        'dismiss' => '',
        'message' => '',
        'target' => '',
        'link' => '',
        'learn_more' => '',
      ),
    ),
  );
}

/**
 * Implements hook_library().
 */
function cookieconsent_library() {
  $libraries = array();

  $libraries['cookieconsent'] = array(
    'version' => '1.0.9',
    'js' => array(
      drupal_get_path('module', 'cookieconsent') . '/js/cookieconsent.js' => array(),
    ),
  );

  $libraries['cookieconsent-min'] = array(
    'version' => '1.0.9',
    'js' => array(
      drupal_get_path('module', 'cookieconsent') . '/js/cookieconsent-min.js' => array(),
    ),
  );

  $libraries['settings'] = array(
    'version' => '1.x',
    'js' => array(
      drupal_get_path('module', 'cookieconsent') . '/js/cookieconsent.settings.js' => array(),
    ),
    'dependencies' => array('drupal.settings'),
  );

  $libraries['dark-bottom'] = array(
    'version' => '1.x',
    'css' => array(
      drupal_get_path('module', 'cookieconsent') . '/css/dark-bottom.css' => array(),
    ),
  );

  $libraries['dark-floating'] = array(
    'version' => '1.x',
    'css' => array(
      drupal_get_path('module', 'cookieconsent') . '/css/dark-floating.css' => array(),
    ),
  );

  $libraries['dark-top'] = array(
    'version' => '1.x',
    'css' => array(
      drupal_get_path('module', 'cookieconsent') . '/css/dark-top.css' => array(),
    ),
  );

  $libraries['light-bottom'] = array(
    'version' => '1.x',
    'css' => array(
      drupal_get_path('module', 'cookieconsent') . '/css/light-bottom.css' => array(),
    ),
  );

  $libraries['light-floating'] = array(
    'version' => '1.x',
    'css' => array(
      drupal_get_path('module', 'cookieconsent') . '/css/light-floating.css' => array(),
    ),
  );

  $libraries['light-top'] = array(
    'version' => '1.x',
    'css' => array(
      drupal_get_path('module', 'cookieconsent') . '/css/light-top.css' => array(),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_page_alter().
 */
function cookieconsent_page_alter(&$page) {
  // Add the library CSS.
  drupal_add_css(
    'http://cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.css',
    array('type' => 'external')
  );

  // Add the library JavaScript.
  drupal_add_js(
    'http://cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.js',
    array('type' => 'external')
  );

  // Add the initialization and configuration JavaScript.
  $config = array();
  $palette = array();
  if (variable_get('cookieconsent_popup_background')) {
    $palette['popup']['background'] = variable_get('cookieconsent_popup_background');
  }
  if (variable_get('cookieconsent_button_background')) {
    $palette['button']['background'] = variable_get('cookieconsent_button_background');
  }
  if (!empty($palette)) {
    $config['palette'] = $palette;
  }
  if (variable_get('cookieconsent_learn_more_type') == 'own'
    && !variable_get('cookieconsent_learn_more_link')) {
    $config['showLink'] = FALSE;
  }
  if (variable_get('cookieconsent_type')) {
    $config['type'] = variable_get('cookieconsent_type');
  }
  if (variable_get('cookieconsent_message')) {
    $config['content']['message'] = variable_get('cookieconsent_message');
  }
  if (variable_get('cookieconsent_accept_button_text')) {
    $config['content']['allow'] = variable_get('cookieconsent_accept_button_text');
  }
  drupal_add_js(
    'window.addEventListener("load", function(){ window.cookieconsent.initialise(' . json_encode($config) . '); });',
    array('type' => 'inline')
  );
}
